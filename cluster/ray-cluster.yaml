# An unique identifier for the head node and workers of this cluster.
cluster_name: ray-demo

# Cloud-provider specific configuration.
provider:
    type: aws
    region: us-east-1
    availability_zone: us-east-1a,us-east-1c
    cache_stopped_nodes: false

auth:
    ssh_user: ubuntu # if using Amazon Linux AMIs then ec2-user

# The maximum number of workers nodes to launch in addition to the head node.
max_workers: 2

upscaling_speed: 1.0

docker:
    image: "rayproject/ray-ml:2.30.0-py311-gpu"
    container_name: "ray_container"
    pull_before_run: True
    run_options:
        - --ulimit nofile=65536:65536

idle_timeout_minutes: 5

# Tell the autoscaler the allowed node types and the resources they provide.
# The key is the name of the node type, which is for debugging purposes.
# The node config specifies the launch config and physical instance type.
available_node_types:
    ray.head.default:
        max_workers: 0
        # The node type's CPU and GPU resources are auto-detected based on AWS instance type.
        # If desired, you can override the autodetected CPU and GPU resources advertised to the autoscaler.
        # You can also set custom resources.
        # For example, to mark a node type as having 1 CPU, 1 GPU, and 5 units of a resource called "custom", set
        # resources: {"CPU": 1, "GPU": 1, "custom": 5}
        resources: {}
        # Provider-specific config for this node type, e.g., instance type. By default
        # Ray auto-configures unspecified fields such as SubnetId and KeyName.
        # For more documentation on available fields, see
        # http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.ServiceResource.create_instances
        docker:
            worker_image: "rayproject/ray:2.30.0-py311-cpu"
            pull_before_run: true
            worker_run_options:
                - --ulimit nofile=65536:65536
        node_config:
            InstanceType: m5.2xlarge
            ImageId: ami-0b868491aba10e85f
            BlockDeviceMappings:
                - DeviceName: /dev/sda1
                  Ebs:
                      VolumeSize: 100
                      VolumeType: gp3
            NetworkInterfaces:
                - AssociatePublicIpAddress: true
                  DeviceIndex: 0
                  Groups:
                      - "sg-09a1b14afd8f05fb2"
                  SubnetId: "subnet-0a8ff342ee1a7f370"
            IamInstanceProfile:
                Arn: "arn:aws:iam::663464815616:instance-profile/ray-demo-ec2-profile"
            TagSpecifications:
                - ResourceType: "instance"
                  Tags: 
                    - Key: "Project"
                      Value: "ray-demo"
                - ResourceType: "volume"
                  Tags: 
                    - Key: "Project"
                      Value: "ray-demo"

    ray.worker.default:
        min_workers: 0
        max_workers: 2
        docker:
            worker_image: "rayproject/ray:2.30.0-py311-gpu"
            pull_before_run: true
            worker_run_options:
                - --ulimit nofile=65536:65536
        resources: {}
        node_config:
            InstanceType: g4dn.xlarge # 4 vCPU, 16 GiB memory, 1 GPU
            ImageId: ami-03db1a48758a57ae6
            BlockDeviceMappings:
                - DeviceName: /dev/sda1
                  Ebs:
                      VolumeSize: 100
                      VolumeType: gp3
            NetworkInterfaces:
                - AssociatePublicIpAddress: true
                  DeviceIndex: 0
                  Groups:
                        - "sg-09a1b14afd8f05fb2"
                  SubnetId: "subnet-0a8ff342ee1a7f370"
            IamInstanceProfile:
                Arn: "arn:aws:iam::663464815616:instance-profile/ray-demo-ec2-profile"
            TagSpecifications:
                - ResourceType: "instance"
                  Tags: 
                    - Key: "Project"
                      Value: "ray-demo"
                - ResourceType: "volume"
                  Tags: 
                    - Key: "Project"
                      Value: "ray-demo"

head_node_type: ray.head.default

file_mounts: {}

cluster_synced_files: []

file_mounts_sync_continuously: False

rsync_exclude:
    - "**/.git"
    - "**/.git/**"

rsync_filter:
    - ".gitignore"

initialization_commands:
    - curl -fsSL https://get.docker.com -o get-docker.sh
    - sudo sh get-docker.sh
    - sudo usermod -aG docker $USER
    - sudo systemctl restart docker -f

setup_commands: []

head_setup_commands: []

worker_setup_commands: []

head_start_ray_commands:
    - ray stop
    - ray start --head --port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml --dashboard-host=0.0.0.0

worker_start_ray_commands:
    - ray stop
    - ray start --address=$RAY_HEAD_IP:6379 --object-manager-port=8076
